from aiogram import Router, types, F
from aiogram.enums import ContentType
from aiogram.filters import Command

video_router = Router()

videos = {
    "BAACAgIAAxkBAAIBy2b8Yfko1N-dsEa0XA7bZndNR57DAAImVQACQzXBSkc-OzFO1UfFNgQ": "–ß—Ç–æ —Ç–∞–∫–æ–µ —Ñ–∏—à–∏–Ω–≥ üé£",
    #"BAACAgIAAxkBAAIB0Wb8ZDcDdQ5vpxwX4nnrmyfXU09cAAIVYAAC0u_gS0cahdJlm5o6NgQ": "–û–ø–∏—Å–∞–Ω–∏–µ –≤–∏–¥–µ–æ 2",
    #"BAACAgIAAxkBAAIB02b8ZJE9n6a-ltIPvkIycMH19Za7AAIYYAAC0u_gS0Llh_M1iN-TNgQ": "–û–ø–∏—Å–∞–Ω–∏–µ –≤–∏–¥–µ–æ 3",
    #"BAACAgIAAxkBAAIB1Wb8ZMNz7FTdocKkVaFC3vdQJ3u7AAIaYAAC0u_gS8CCPdORA-qKNgQ": "–û–ø–∏—Å–∞–Ω–∏–µ –≤–∏–¥–µ–æ 4",
}

@video_router.message(F.content_type == ContentType.VIDEO)
async def send_video_file_id(message: types.Message):
    # –ü–æ–ª—É—á–∞–µ–º ID –≤–∏–¥–µ–æ
    video_id = message.video.file_id
    await message.reply(f"–í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ! ID: {video_id}\n–û–ø–∏—Å–∞–Ω–∏–µ: {description}")



@video_router.message(Command("video_list"))
async def list_videos(message: types.Message):
    if not videos:
        await message.reply("–ù–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ.")
        return

    response = "–°–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ:\n\n"
    for idx, (video_id, video_description) in enumerate(videos.items(), start=1):
        response += f"{idx}. {video_description}\n\n"
    await message.reply(response)

@video_router.message(Command("video"))
async def send_video(message: types.Message):
    if not videos:
        await message.reply("–ù–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ.")
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ –≤–∏–¥–µ–æ –∏–∑ —Å–ø–∏—Å–∫–∞

    for video_id, video_description in videos.items():
        await message.answer_video(video=video_id, caption=video_description)
